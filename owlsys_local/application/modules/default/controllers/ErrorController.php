<?php
/**
 * Default error controller generated by zend tool
 * @package default
 * @subpackage controllers
 * @version 1
 *
 */

class Default_ErrorController extends Zend_Controller_Action
{

    /**
     * (non-PHPdoc)
     *
     */
    public function errorAction()
    {
		$errors = $this->_getParam( 'error_handler' );
		$cms_error = $this->_getParam( 'cms_error' );
		$eh = $this->_getParam( 'eh' );
		if ( $eh == 'ids' ) {
		    $this->getResponse()->setHttpResponseCode( 500 );
		    $this->view->message = '<p>El sistema ha detectado un posible ataque.</p>';
		    $this->view->message .= '<p>Si el error persiste o piensa que el sistema no responde de manera adecuada contacte al administrador para solucionar el problema.</p>';
		    $this->view->eh = 'ids';
		} else {
		    
    		if ( ! $errors )
    		{
    			if ( strlen($cms_error) > 0 )
    			{
    				$this->view->message = 'Resource not found';
    				#return;
    			} else {
    				$this->view->message = 'You have reached the error page';
    			}
    			return;
    		}
    		switch ( $errors->type )
    		{
    			case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE :
    			case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_CONTROLLER :
    			case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ACTION :
    				// 404 error -- controller or action not found
    				$this->getResponse()->setHttpResponseCode( 404 );
    				$this->view->message = 'Page not found';
    				break;
    			default :
    				// application error
    				$this->getResponse()->setHttpResponseCode( 500 );
    				$this->view->message = 'Application error';
    				break;
    		}
    		// Log exception, if logger available
    		if ( $log = $this->getLog() )
    		{
    			$log->crit( $this->view->message, $errors->exception );
    		}
    		// conditionally display exceptions
    		if ( $this->getInvokeArg( 'displayExceptions' ) == true )
    		{
    			$this->view->exception = $errors->exception;
    		}
    		$this->view->request = $errors->request;
		}
    }

    /**
     * (non-PHPdoc)
     *
     */
    public function getLog()
    {
		$bootstrap = $this->getInvokeArg( 'bootstrap' );
		if ( ! $bootstrap->hasResource( 'Log' ) )
		{
			return false;
		}
		$log = $bootstrap->getResource( 'Log' );
		return $log;
    }

    /**
     * (non-PHPdoc)
     *
     */
    public function noauthAction()
    {
		// action body
    }

    public function idsAction()
    {
        // action body
        $this->getResponse()->setHttpResponseCode( 500 );
		#$this->view->message = Zend_Registry::get('Zend_Translate')->translate('LBL_IDS_MESSAGE');
    }


}

